<?php

chdir(__DIR__);

include_once("baseModel.php");

class UserModel extends BaseModel
{


    protected $tableName = 'users';
    protected $primary = 'UserID';
    protected $fillable = [
        'Username', 'Password', 'Registration','IsDeleted','Email'
    ];

    protected $fieldMap = [
        'username' => 'Username',
        'password' => 'Password',
        'email'=>'Email'




    ];
/*
    public function update1($id, $data)
    {

        $dataToUpdate = [];
        foreach ($data as $key => $value) {
            if (array_key_exists($key, $this->fieldMap))
                $dataToUpdate[$this->fieldMap[$key]] = $value;
        }


        return parent::update($id, $dataToUpdate);
        // TODO: Change the autogenerated stub
    }
*/
    public function checkUser($request)
    {
        // var_dump($request);
        $params = [
            'Username' => $request['username']
            //'Password' => $this->request['password']
        ];
        $elt = $this->getAll($params);
        // var_dump($elt);

        if (!empty($elt)) {
            if (password_verify($request['password'], $elt[0]['Password'])) {
                $_SESSION['logged'] = 'yes';
                $_SESSION['username'] = $request['username'];


            } else {
                //var_dump("jee");
                $_SESSION['logged'] = 'no';
            }

        } else {
            //var_dump("jee");
            $_SESSION['logged'] = 'no';
        }
        //header("Refresh:0; url=index.php");
        header("location:index.php");
        //var_dump("tuki je Å¡tos");


    }

    public function existUser($request)
    {
        $params = [
            'Username' => $request['username']
        ];
        if(!empty($this->getAll($params)))
        {
            return True;
        }
        else
        {
            return False;
        }


    }
    public function newUser($request)
    {

        if ($this->existUser($request)==True)
        {
            return False;
        }
        else{


            $params = [
                'Username' => $request['username'],
                'Email' => $request['email'],
                'Password' => password_hash($request['password'], PASSWORD_DEFAULT),
                'IsDeleted' =>'0',
                'Registration' => (new DateTime('now'))->format('Y-m-d h:s')
            ];
            
            $userID=$this->create();
            //print_r($userID);
            $this->update($userID, $params);
            return True;

        }


    }


}